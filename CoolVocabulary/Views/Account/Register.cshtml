@model CoolVocabulary.Models.RegisterViewModel
@{
   ViewBag.Title = "Sign up";
}

<link href="~/Content/account.css" rel="stylesheet" />

<div class="centered-container">
    <div class="centered-ui">
        <div class="centered-header">
            Please, sign up to continue
        </div>
        <div class="form-container">
            @using (Html.BeginForm("ExternalLogin", "Account", new { returnUrl = ViewBag.ReturnUrl })) {
                @Html.AntiForgeryToken()
                <div id="openid-buttons">
                    <button type="submit" value="Google" name="provider" class="preferred-login google-login">
                        <div class="icon-container"><span class="icon" style=""></span></div>
                        <div class="text"><span>Google</span></div>
                        <br class="cbt">
                    </button>
                    @*<button type="submit" value="Facebook" name="provider" class="preferred-login   facebook-login">
                        <div class="icon-container"><span class="icon" style=""></span></div>
                        <div class="text"><span>Facebook</span></div>
                        <br class="cbt">
                    </button>*@
                </div>
            }
            <div class="or-container">
                <hr class="or-hr">
                <div id="or">or</div>
            </div>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "clearfix", role = "form", id = "cv-login-form" })) {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary()
                @Html.LabelFor(m => m.DisplayName)
                @Html.TextBoxFor(m => m.DisplayName)
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email)
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password)
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword)
                <input type="submit" class="pull-right" value="Sign Up" />
            }
        </div>
        @*<div id="switch">
            Already have an account? @Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
        </div>*@
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
