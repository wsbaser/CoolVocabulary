@using Microsoft.AspNet.Identity
@using CoolVocabulary.Models;
@using Microsoft.AspNet.Identity.EntityFramework;
@{
    ApplicationUser user = null;
    if (Request.IsAuthenticated) {
        var um = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new VocabularyDbContext()));
        user = um.FindById(User.Identity.GetUserId());
    }

    bool? isVocabularyAction = ViewBag.isVocabularyAction;
    if (user != null) { 
        <ul class="nav navbar-nav navbar-right">
            @if (isVocabularyAction==true) {
            <li>
                <div id="current_target_progress" class="menu-flex-centered">
                    <svg>
                        <rect class="full" x="0" y="0" width="100" height="10" fill="#ebeef2"></rect>
                        <rect class="completed" x="0" y="0" width="0" height="10" fill="#39b3d7"></rect>
                    </svg>
                </div>
            </li>
            <li>
                <div id="current_language" class="menu-flex-centered">
                    <i class="language-icon en" title="English"></i>
                </div>
            </li>
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="userName">
                    @user.DisplayName
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu">
                    <li>
                        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class="hidden" })) {
                            @Html.AntiForgeryToken()
                        }
                        <a href="javascript:document.getElementById('logoutForm').submit()" class="logout-link">
                            <i class="glyphicon glyphicon-off"></i>
                            Log Out
                        </a>
                    </li>
                </ul>
            </li>
            } 
            else {
            <li>
                @Html.ActionLink(user.DisplayName, "Vocabulary")
            </li>
            }
        </ul>
    }
    else
    {
        <ul class="nav navbar-nav">
            <li>@Html.ActionLink("Sign In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
            <li>
                <a href="@Url.Action("Register", "Account")" id="registerLink">
                    <button class="btn btn-primary btn-xs">Sign Up</button>
                </a>
            </li>
        </ul>
    }
}
